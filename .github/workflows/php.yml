name: PHP Composer

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify-acceptance-suite:
    runs-on: ubuntu-20.04
    name: "Validate acceptance tests"
    steps:
      - uses: actions/checkout@v2

      # -- Acceptance tests
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - run: yarn --cwd acceptance-tests/ install --frozen-lockfile

      # -- Verify test suite
      - name: Verify acceptance-tests
        run: yarn --cwd acceptance-tests/ verify

  build-and-test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system:
          - ubuntu-20.04
        php-version:
          - '8.0'
        package:
          - reactphp
          - swoole
    name: "${{ matrix.package }} - PHP ${{ matrix.php-version }} ${{ matrix.operating-system }}"
    env:
      php-extensions: swoole
      matrix-key: ${{ matrix.package }}-${{ matrix.php-version }}-${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v2

      # -- Docker tools
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-step1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # -- PHP tools
      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
          key: ${{ env.php-extensions }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: ${{ env.php-extensions }}
          ini-values: memory_limit=4096M
          tools: composer:v2
          coverage: xdebug
        env:
          fail-fast: true

      # -- Acceptance tests setup
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - run: yarn --cwd acceptance-tests/ install --frozen-lockfile

      # -- App setup
      - name: Cache vendor/
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: projects/${{ matrix.package }}/vendor
          key: ${{ runner.os }}-${{ env.matrix-key }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.matrix-key }}-php-

      - name: Cache vendor-bin/tools/vendor/
        id: composer-bin-cache
        uses: actions/cache@v2
        with:
          path: projects/${{ matrix.package }}/vendor-bin/tools/vendor
          key: ${{ runner.os }}-${{ env.matrix-key }}-php-bin-${{ hashFiles('**/vendor-bin/**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.matrix-key }}-php-bin-

      - name: Validate composer.json and composer.lock
        run: composer --working-dir=projects/${{ matrix.package }} validate

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer --working-dir=projects/${{ matrix.package }} install --prefer-dist --no-progress --no-suggest

      # -- App
      - name: Verify project
        run: composer --working-dir=projects/${{ matrix.package }} verify

      - name: Start devstack_app_deps
        run: docker-compose -f projects/${{ matrix.package }}/docker-compose.yaml -f docker-compose.yaml up --build -d devstack_app_deps

      - name: Run project unit and (whitebox) integration tests
        run: composer --working-dir=projects/${{ matrix.package }} test

      - name: Start devstack_app
        run: docker-compose -f projects/${{ matrix.package }}/docker-compose.yaml -f docker-compose.yaml up --build -d devstack_app

      - name: Run project acceptance tests
        id: project-acceptance-tests
        run: yarn --cwd acceptance-tests/ test

      - name: Stop devstack
        if: ${{ always() }}
        run: docker-compose -f projects/${{ matrix.package }}/docker-compose.yaml -f docker-compose.yaml down

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ env.matrix-key }}-project-reports
          path: projects/${{ matrix.package }}/reports/

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ env.matrix-key }}-acceptance-test-reports
          path: acceptance-tests/reports/

      - name: Badge values
        id: badge-values
        env:
          # success, failure, cancelled, or skipped
          TEST_OUTCOME: ${{ steps.project-acceptance-tests.outcome }}
        run: |
          echo "::set-output name=badge-color::orange"
          echo "::set-output name=badge-label::tests"
          echo "::set-output name=badge-message::$TEST_OUTCOME"

          if [ "$TEST_OUTCOME" = "success" ]; then
            echo "::set-output name=badge-color::green"
          fi;

          if [ "$TEST_OUTCOME" = "failure" ]; then
            echo "::set-output name=badge-color::red"
          fi;

      - name: Store badge data
        uses: schneegans/dynamic-badges-action@v1.0.0
        if: ${{ always() }}
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 7cc457b63114c8042d88652573411bed
          filename: ${{ matrix.package }}.json
          color: ${{ steps.badge-values.outputs.badge-color }}
          label: ${{ steps.badge-values.outputs.badge-label }}
          message: ${{ steps.badge-values.outputs.badge-message }}

  publish-test-results:
    name: "Publish test reports"
    needs: build-and-test
    runs-on: ubuntu-20.04

    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts/

      - name: Publish project test results
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        with:
          check_name: Unit test results
          report_individual_runs: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: "artifacts/*-project-reports/**/junit.xml"

      - name: Publish Acceptance test results
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        with:
          check_name: Acceptance test results
          report_individual_runs: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: "artifacts/*-acceptance-test-reports/**/junit.xml"
